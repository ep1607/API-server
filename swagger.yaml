openapi: 3.0.0
info:
  title: My API
  version: "1.0.0"
  description: Express API with Swagger (YAML)
servers:
  - url: http://localhost:3000

paths:
  /:
    get:
      summary: Root endpoint
      responses:
        "200":
          description: Welcome message
          content:
            application/html:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Welcome to my API!

  /pages:
    get:
      summary: Get all pages
      responses:
        '200':
          description: List of pages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
        '404':
          description: Pages not found
    post:
      summary: Create a new page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageInput'
      responses:
        '201':
          description: Page created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400': 
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Title and content are required
  /pages/{id}:
    get:
      summary: Get a page by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Page found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: "Page not found"
          
    put:
      summary: Update a page by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageInput'
      responses:
        '200':
          description: Page updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: "Page not found"
    delete:
      summary: Delete a page by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Page deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: "Page not found"
  /contact:
    get:
      summary: Contact us endpoint
      responses:
        '200':
          description: Contact message
          content:
            application/json:
              schema:
                type: string
                example: Contact us at email@example.com
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: "Page not found"

# Catch-all undefined routes
  /{undefined_route}:
    get:
      summary: Handle undefined routes
      parameters:
        - name: undefined_route
          in: path
          required: true
          schema:
            type: string
      responses:
        '404':
          description: Route not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - path
                properties:
                  error:
                    type: string
                    example: "Not found"

components:
  schemas:
    Page:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: My Page
        content:
          type: string
          example: This is my page content.
    PageInput:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          example: My Page
        content:
          type: string
          example: This is my page content.